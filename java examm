1  ###REVERSE STRING


Scanner input=new Scanner(System.in);
String name=input.nextLine();
String empty="";
int len=name.length();
for(int i=len-1;i>=0;i--)
{
 empty=empty+name.charAt(i);
}
System.out.print(empty);



2  ##REVERSE NUMBER


Scanner input=new Scanner(System.in);
int n=input.nextInt();
int rev=0;
while(n!=0)
{
 int rem=n%10;
 rev=rev*10+rem;
 n=n/10;
}
System.out.print(rev);


3  ##LCM AND GCD


import java.util.Scanner;
public class ak
{
 static int gcd(int a,int b)
 {
 if(a==0)
 return b;
 return gcd(b%a,a);
 }
 static int findgcd(int a[], int n)
 {
 int res=a[0];
 for(int i=0;i<n;i++)
 {
 res=gcd(res,a[i]);
 if(res==1)
 return 1;
 }
 return res;
 }
 public static void main(String[] args)
 {
 Scanner input=new Scanner(System.in);
 int n=input.nextInt();
 int a[]=new int[n];
 for(int i=0;i<n;i++)
 {
 a[i]=input.nextInt();
 }
 System.out.println(findgcd(a,n));
 int gcd=findgcd(a,n);
 int mul=1;
 for(int i=0;i<n;i++)
 {
 mul=mul*a[i];
 }
 int lcm=mul/gcd;
 System.out.println(lcm);
 }
}


4  ##LEFT ANGLE TRIANGLE



Scanner input = new Scanner(System.in);
int n=5;
for(int i=1;i<=5;i++)
{
 for(int j=0;j<=n-i;j++)
 {
 System.out.print(" ");
 }
 for(int k=1;k<=i;k++)
 {
 System.out.print("* ");
 }
 System.out.println();
}



5 ##
1
1 1
1 2 1
1 3 3 1
1 4 6 4 1
Scanner input=new Scanner(System.in);
int n=input.nextInt();
for(int i=1;i<=n;i++)
{
 int a=1;
 for(int s=1;s<=n-i;s++)
 {
 System.out.print(" ");
 }
 for(int j=1;j<=i;j++)
 {
 System.out.print(a+" ");
 a=a*(i-j)/j;
 }
 System.out.println();
}



6 ##  PNR 


Scanner input = new Scanner(System.in);
int pri=input.nextInt();
int year=input.nextInt();
char age=input.next().charAt(0);
double interest=0.0;
if(age=='y')
{
 interest=(pri*year*0.12)/100;
 System.out.print(interest);
}
else
{
 interest=(pri*year*0.1)/100;
 System.out.print(interest);
}



7 ## FEBANOCCI EVEN SUM 


int n=input.nextInt();
int a1=0,a2=1,a3;
int a[]=new int[50];
for(int i=0;i<10;i++)
{
 a[i]=a1;
 System.out.print(a[i]+" ");
 a3=a1+a2;
 a1=a2;
 a2=a3;
}
int sum=0;
for(int i=0;i<=n*2;i=i+2)
{
 sum=sum+a[i];
}
System.out.println("\nSum: "+sum);



8 ## MATRIX ADDTION 


Scanner input = new Scanner(System.in);
int mat1[][]={{1,2},{5,3}};
int mat2[][]={{2,3},{4,1}};
int mat_sum[][]=new int[2][2];
int len=mat1.length;
for(int i=0;i<len;i++)
{
 for(int j=0;j<len;j++)
 {
 mat_sum[i][j]=mat1[i][j]+mat2[i][j];
 System.out.print(mat_sum[i][j]+"\t");
 }
 System.out.println();
}



9 ## ALPHABATIC ODER



Scanner input = new Scanner(System.in);
String arr[] = {"Banana", "Apple", "Carrot", "Radish", "Jack"};
int len = arr.length;
char order = input.next().charAt(0);
if (order == 'A') {
 for (int i = 0; i < len; i++) {
 for (int j = i + 1; j < arr.length; j++) {
 if (arr[i].compareTo(arr[j]) > 0) {
 String temp = arr[i];
 arr[i] = arr[j];
 arr[j] = temp;
 }
 }
 }
 System.out.println(Arrays.toString(arr));
}
else if (order == 'D') {
 for (int i = 0; i < len; i++) {
 for (int j = i + 1; j < arr.length; j++) {
 if (arr[i].compareTo(arr[j]) < 0) {
 String temp = arr[i];
 arr[i] = arr[j];
 arr[j] = temp;
 }
 }
 }
 System.out.println(Arrays.toString(arr));
}


10 ## MATRIX MUL





Scanner input=new Scanner(System.in);
int r=input.nextInt();
int c=input.nextInt();
int mat1[][]=new int[r][c];
int mat2[][]=new int[r][c];
for(int i=0;i<r;i++)
{
 for(int j=0;j<c;j++)
 {
 mat1[i][j]=input.nextInt();
 }
}
for(int i=0;i<r;i++)
{
 for(int j=0;j<c;j++)
 {
 mat2[i][j]=input.nextInt();
 }
}
int sum[][]=new int[r][c];
for(int i=0;i<r;i++)
{
 for(int j=0;j<c;j++)
 {
 sum[i][j]=0;
 for(int k=0;k<c;k++)
 {
 sum[i][j] = sum[i][j] +(mat1[i][k]*mat2[k][j]);
 }
 System.out.print(sum[i][j] + "\t");
 }
 System.out.println();
}



11  ##


1
11
111
11
1
Scanner input=new Scanner(System.in);
System.out.print("Enter the number to be printed: ");
int x=input.nextInt();
System.out.print("Max Number of time printed: ");
int n=input.nextInt();
for(int i=1;i<=n;i++)
{
 for(int j=1;j<=i;j++)
 {
 System.out.print(x);
 }
 System.out.println();
}
for(int i=n-1;i>=1;i--)
{
 for(int j=1;j<=i;j++)
 {
 System.out.print(x);
 }
 System.out.println();
}



12  ## SPECIAL CHARCHATER



Scanner input=new Scanner(System.in);
String s=input.nextLine();
int len=s.length();
char a[]=new char[len];
int sp=0;
for(int i=0;i<len;i++)
{
 a[i]=s.charAt(i);
 if(a[i]>=65 && a[i]<=90 ||a[i]>=97 &&a[i]<=122
 || a[i]>=48 && a[i]<=57)
 {
 }
 else
 {
 sp++;
 System.out.print(a[i]);
 }
}
System.out.println("\n"+sp);




13   ##  COMPOSITE B/W A AND B




Scanner input=new Scanner(System.in);
int a=input.nextInt();
int b=input.nextInt();
for(int i=a+1;i<=b;i++)
{
 int c=0;
 for(int j=1;j<=b;j++)
 {
 if(i%j==0)
 c++;
 }
 if(c>2)
 System.out.print(i+" ");
}




14   ##  INVERT PYRAMID



Scanner input=new Scanner(System.in);
int n=input.nextInt();
for(int i=n;i>=1;i--)
{
 for(int j=0;j<n-i;j++)
 {
 System.out.print(" ");
 }
 for(int k=1;k<=i;k++)
 {
 System.out.print(" *");
 }
 System.out.println();
}




15 ## MEAN ,MEDIAN , MODE



Scanner input=new Scanner(System.in);
int a[]={16,18,27,16,23,21,19};
int len=a.length;
int sum=0;
for(int i=0;i<len;i++)
{
 sum=sum+a[i];
}
int mean=sum/len;
System.out.println("mean: "+mean);
for(int i=0;i<len;i++)
{
 for(int j=i+1;j<len;j++)
 {
 if(a[i]>a[j])
 {
 int temp=a[i];
 a[i]=a[j];
 a[j]=temp;
 }
 }
}
for(int i=0;i<len;i++)
{
 if(len%2==0)
 {
 int mid=len/2;
 System.out.print("median: "+a[mid-1]);
 break;
 }
 else
 {
 int mid=(len+1)/2;
 System.out.print(mid);
 System.out.println("median: "+a[mid-1]);
 break;
 }
}
for(int i=0;i<len;i++)
{
 for(int j=i+1;j<len;j++)
 {
 if(a[i]==a[j])
 {
 System.out.println("mode: "+a[i]);
 break;
 }
}
}


16  ## FACTORIAL 



Scanner input=new Scanner(System.in);
 int n=input.nextInt();
 int fact=1;
 for(int i=1;i<=n;i++)
 {
 fact=fact*i;
 }
 System.out.print(fact);
}



17  ##  FACTOR OF N



Scanner input=new Scanner(System.in);
int n=input.nextInt();
int factors=0;
for(int i=1;i<=n;i++)
{
 if(n%i==0)
 factors=factors+1;
}
System.out.print("Number of factors = "+factors);
1. Scanner input=new Scanner(System.in);
int n=input.nextInt();
int factors=0;
for(int i=1;i<=n;i++)
{
 if(n%i==0)
 factors++;
}
System.out.print(factors);




18  ## PERFECT NUM



Scanner input=new Scanner(System.in);
int n=input.nextInt();
int factors=0;
for(int i=1;i<n;i++)
{
 if(n%i==0)
 factors=factors+i;
}
if(n==factors)
 System.out.print("It's a perfect number");





19   ##  VOWEL 



Scanner input=new Scanner(System.in);
String name=input.nextLine();
int len=name.length();
char a[]=new char[len];
int vow=0;
for(int i=0;i<len;i++)
{
 a[i]=name.charAt(i);
 if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u'
 ||a[i]=='A'||a[i]=='E'||a[i]=='I'||a[i]=='O'||a[i]=='U')
 vow=vow+1;
}
System.out.println(vow);



20  ##    HALLOW SQUARE




Scanner input=new Scanner(System.in);
int n=5;
char c=input.next().charAt(0);
for(int i=1;i<=n;i++)
{
 for(int j=1;j<=n;j++)
 {
 if(i==1||j==1||i==n||j==n)
 System.out.print(c+" ");
 else
 System.out.print(" ");
 }
 System.out.println();
}



21   ### CONSONENT AND VOWELS



Scanner input=new Scanner(System.in);
String name=input.nextLine();
int len=name.length();
char a[]=new char[len];
char vow[]=new char[len];
char con[]=new char[len];
int v=0,c=0;
for(int i=0;i<len;i++)
{
 a[i]=name.charAt(i);
 if(a[i]=='a'||a[i]=='e'||a[i]=='i'||a[i]=='o'||a[i]=='u'
 ||a[i]=='A'||a[i]=='E'||a[i]=='I'||a[i]=='O'||a[i]=='U') {
 vow[v] = a[i];
 v++;
 }
 else {
 con[c] = a[i];
 c++;
 }
}
System.out.print("Consonants: ");
for(int i=0;i<v;i++)
{
 System.out.print(vow[i]);
}
System.out.print("\nvowels: ");
for(int j=0;j<c;j++)
{
 System.out.print(con[j]);
}



22  ### 


1
2 2
3 3 3 
4 4 4 4
Scanner input=new Scanner(System.in);
int n=input.nextInt();
for(int i=1;i<=n;i++)
{
 for(int j=1;j<=i;j++)
 {
 System.out.print(i);
 }
 System.out.println();
}




23   ##   FREQUENCY 



import java.util.Arrays;
import java.util.Scanner;
public class ak {
 public static void main(String[] args)
 {
 Scanner input=new Scanner(System.in);
 int a[]=new int[] {1,2,8,3,2,2,2,5,1};
 int t[]=new int[a.length];
 int visited=-1;
 for(int i=0;i<a.length;i++)
 {
 int count=1;
 for(int j=i+1;j<a.length;j++)
 {
 if(a[i]==a[j])
 {
 count++;
 t[j]=visited;
 }
 }
 if(t[i]!=visited)
 t[i]=count;
 }
 for(int i=0;i<a.length;i++)
 {
 if(t[i]!=visited)
 System.out.println(a[i]+" "+t[i]);
 }
 }
}



24   ## 


1
4 9
16 25 36
49 64 81 100
Scanner input=new Scanner(System.in);
int n=input.nextInt();
int k=1;
for(int i=1;i<=n;i++)
{
 for(int j=1;j<=i;j++)
 {
 System.out.print(k*k+" ");
 k++;
 }
 System.out.println();
}





25  ###   COMPOSITE IN ARRAY



Scanner input=new Scanner(System.in);
int arr[]={16,18,27,16,23,21,19};
int len=arr.length;
int count=0;
for(int i=0;i<len;i++)
{
 int c=0;
 for(int j=1;j<100;j++)
 {
 if(arr[i]%j==0)
 {
 c++;
 }
 }
 if(c>2)
 count++;
}
System.out.println(count);







26  ###  NTH ODD



Scanner input=new Scanner(System.in);
int n=input.nextInt();
int arr[]=new int[100];
int j=1;
for(int i=1;i<100;i++)
{
 if(i%2!=0) {
 arr[j] = i;
 j++;
 }
}
System.out.print(arr[n*2]);




27  ###   Enter the string: I am a programmer
Enter the character to be searched: p
Sample Output:
P is found in string at index: 8
Note: Check for non available Character in the given statement as Hidden 
Test case.
Scanner input=new Scanner(System.in);
String str=input.nextLine();
char c=input.next().charAt(0);
char arr[]=new char[str.length()];
int len=str.length();
int x=0;
for(int i=0;i<len;i++)
{
 arr[i]=str.charAt(i);
 if(arr[i]==c)
 {
 System.out.println(c+" is found in string at index: "+(i+1));
 x=1;
 }
}
if(x==0)
 System.out.print("character not found");




28   ###


1
2 2
3 3 3 
4 4 4 4
3 3 3
2 2
1
Scanner input=new Scanner(System.in);
int n=input.nextInt();
for(int i=1;i<=n;i++)
{
 for(int j=1;j<=i;j++)
 {
 System.out.print(i);
 }
 System.out.println();
}
for(int i=n-1;i>=1;i--)
{
 for(int j=1;j<=i;j++)
 {
 System.out.print(i);
 }
 System.out.println();
}





29  ### ARMSTRONG



Scanner input=new Scanner(System.in);
int n=input.nextInt();
int num1=n;
int arm=0;
while(num1!=0)
{
 int rem=num1%10;
 arm=arm+(rem*rem*rem);
 num1=num1/10;
}
if(n==arm)
 System.out.print("Armstrong number");
else
 System.out.print("Not Armstrong");



30   ### N TH DIGIT SUM 



Scanner input=new Scanner(System.in);
int n=input.nextInt();
int sum=0;
while(n!=0)
{
 int rem=n%10;
 sum=sum+rem;
 n=n/10;
}
System.out.println(sum);



31  ##  SQUARE ROOT




import java.util.Scanner;
import java.lang.Math;
public class ak
{
 public static void main(String args[])
 {
 Scanner input=new Scanner(System.in);
 double n=input.nextInt();
 double sqrt=Math.pow(n,0.5);
 double sq=Math.sqrt(n);
 System.out.println(sqrt+","+"-"+sqrt);
 }
}


